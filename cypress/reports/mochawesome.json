{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-05T18:35:14.145Z",
    "end": "2022-07-05T18:36:29.063Z",
    "duration": 74918,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d63f66de-744c-468d-8ac9-6e08eaae7772",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e89d43fc-33b3-4f10-93d5-0c77d0f85d3c",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "80e15966-e4f9-403f-b19c-fc90a474f33b",
              "parentUUID": "e89d43fc-33b3-4f10-93d5-0c77d0f85d3c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80e15966-e4f9-403f-b19c-fc90a474f33b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75bebff5-7679-4ebc-b5a8-737dd3651690",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "f3a00aaf-a9ec-4293-828b-4d9e20eb7379",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ea74f1ae-c661-4c8e-99f6-f67c78e9658a",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e79b099f-0c6c-466a-b7b0-3396233dfc8d",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "18801bb7-fe1a-4df6-a080-57d08598206c",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "677f515e-91e1-4c4a-ab44-064942c54e78",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "2c204032-2041-4bf1-8911-0c64becfc3c2",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "9b672e7e-6158-40bc-ae5c-7864c8a8be0d",
              "parentUUID": "75bebff5-7679-4ebc-b5a8-737dd3651690",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3a00aaf-a9ec-4293-828b-4d9e20eb7379",
            "ea74f1ae-c661-4c8e-99f6-f67c78e9658a",
            "e79b099f-0c6c-466a-b7b0-3396233dfc8d",
            "18801bb7-fe1a-4df6-a080-57d08598206c",
            "677f515e-91e1-4c4a-ab44-064942c54e78",
            "2c204032-2041-4bf1-8911-0c64becfc3c2",
            "9b672e7e-6158-40bc-ae5c-7864c8a8be0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "77080f0a-f393-4e3b-836a-368b4a6b4c47",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "719c12e2-aa56-4ff7-aa8f-4a1b411881c1",
              "parentUUID": "77080f0a-f393-4e3b-836a-368b4a6b4c47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1b63d145-ddb0-4785-8831-214db308823b",
              "parentUUID": "77080f0a-f393-4e3b-836a-368b4a6b4c47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "719c12e2-aa56-4ff7-aa8f-4a1b411881c1",
            "1b63d145-ddb0-4785-8831-214db308823b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa8dd106-1201-40f0-96b6-1f3d4fcdc20a",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "6c9efa72-c7d8-46b7-b4be-036602ad3f05",
              "parentUUID": "fa8dd106-1201-40f0-96b6-1f3d4fcdc20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "fd14406f-179a-4be4-aefe-a4529fa4dfa2",
              "parentUUID": "fa8dd106-1201-40f0-96b6-1f3d4fcdc20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f86db38a-b362-41f3-b09c-df1308132ebe",
              "parentUUID": "fa8dd106-1201-40f0-96b6-1f3d4fcdc20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a7b225f2-f016-483c-a49b-5d000f33f9de",
              "parentUUID": "fa8dd106-1201-40f0-96b6-1f3d4fcdc20a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c9efa72-c7d8-46b7-b4be-036602ad3f05",
            "fd14406f-179a-4be4-aefe-a4529fa4dfa2",
            "f86db38a-b362-41f3-b09c-df1308132ebe",
            "a7b225f2-f016-483c-a49b-5d000f33f9de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "efc3f5d7-cae0-4cf7-a516-b48a555e71cc",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "edb1e0d1-4d74-4e02-88f3-886219a4617f",
              "parentUUID": "efc3f5d7-cae0-4cf7-a516-b48a555e71cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "807e5f77-e651-4ad9-ba76-d0a9dec7c8ad",
              "parentUUID": "efc3f5d7-cae0-4cf7-a516-b48a555e71cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edb1e0d1-4d74-4e02-88f3-886219a4617f",
            "807e5f77-e651-4ad9-ba76-d0a9dec7c8ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e71c0ea-f0e4-4010-9529-63df51337203",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d51878af-4ef4-4570-9396-36d4dff0401e",
              "parentUUID": "5e71c0ea-f0e4-4010-9529-63df51337203",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d8b5402a-db31-4c2e-baa3-66fb0ccaefa0",
              "parentUUID": "5e71c0ea-f0e4-4010-9529-63df51337203",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d51878af-4ef4-4570-9396-36d4dff0401e",
            "d8b5402a-db31-4c2e-baa3-66fb0ccaefa0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a74d58e3-2de9-4b98-baf3-429d52950830",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "1e23c823-b511-45e8-9c6b-4d9dddce7142",
              "parentUUID": "a74d58e3-2de9-4b98-baf3-429d52950830",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 7689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "283496eb-4b79-4131-a4e3-326f9a8a01a4",
              "parentUUID": "a74d58e3-2de9-4b98-baf3-429d52950830",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e23c823-b511-45e8-9c6b-4d9dddce7142",
            "283496eb-4b79-4131-a4e3-326f9a8a01a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8099,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f0966333-bdd9-4714-88b2-95229a306046",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "2bc3e1dc-4c3c-4c4e-8a96-21e83c080a19",
              "parentUUID": "f0966333-bdd9-4714-88b2-95229a306046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 7669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "59da673c-602c-487d-a7e3-44f2c35c2d0a",
              "parentUUID": "f0966333-bdd9-4714-88b2-95229a306046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "bfe78d46-bb9c-448b-b329-8e8d40f23291",
              "parentUUID": "f0966333-bdd9-4714-88b2-95229a306046",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bc3e1dc-4c3c-4c4e-8a96-21e83c080a19",
            "59da673c-602c-487d-a7e3-44f2c35c2d0a",
            "bfe78d46-bb9c-448b-b329-8e8d40f23291"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10560,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8c25507-5a62-4ad4-8ebb-94ee63e6ef68",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "95dfb1e1-730a-432a-abe0-c11727ca755a",
              "parentUUID": "a8c25507-5a62-4ad4-8ebb-94ee63e6ef68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "71137aea-292e-493e-9a13-adab1b8d966d",
              "parentUUID": "a8c25507-5a62-4ad4-8ebb-94ee63e6ef68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "653f2e1e-b1a0-48d8-b052-d78907079032",
              "parentUUID": "a8c25507-5a62-4ad4-8ebb-94ee63e6ef68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "972c261f-c099-453f-8d63-fc714b7bd82b",
              "parentUUID": "a8c25507-5a62-4ad4-8ebb-94ee63e6ef68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95dfb1e1-730a-432a-abe0-c11727ca755a",
            "71137aea-292e-493e-9a13-adab1b8d966d",
            "653f2e1e-b1a0-48d8-b052-d78907079032",
            "972c261f-c099-453f-8d63-fc714b7bd82b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2262,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a881215-5811-4af6-a9a5-746fff047d04",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b49200ee-c369-4395-a563-9b97b0dfe97b",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4235,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "41c74c07-39dd-4176-a51f-2b9eba896e59",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ea74ce94-61d5-4dde-b3ff-fe7fe16354d2",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4288,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e92ee3aa-fc3e-4079-8035-24dadd63fa06",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4203,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d2c1f221-f364-4f58-ab46-c9ebdb7d6156",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4174,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4c8972ac-87e0-4324-bebd-bfb57c93eedb",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c19c4407-06d5-4575-be1d-f8a9f057746c",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9082d93a-da56-4d23-a537-ad1407c3865d",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b3d7b904-2e94-4b0e-ae62-68b23555b4cb",
              "parentUUID": "7a881215-5811-4af6-a9a5-746fff047d04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b49200ee-c369-4395-a563-9b97b0dfe97b",
            "41c74c07-39dd-4176-a51f-2b9eba896e59",
            "ea74ce94-61d5-4dde-b3ff-fe7fe16354d2",
            "e92ee3aa-fc3e-4079-8035-24dadd63fa06",
            "d2c1f221-f364-4f58-ab46-c9ebdb7d6156",
            "4c8972ac-87e0-4324-bebd-bfb57c93eedb",
            "c19c4407-06d5-4575-be1d-f8a9f057746c",
            "9082d93a-da56-4d23-a537-ad1407c3865d",
            "b3d7b904-2e94-4b0e-ae62-68b23555b4cb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a6a2092f-8c82-474a-b623-3b3ce1b58d4a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f308af4-d093-46eb-a61a-325aa121e309",
              "parentUUID": "a6a2092f-8c82-474a-b623-3b3ce1b58d4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4229,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "35ba6758-2114-440e-89a9-8011b54ed2eb",
              "parentUUID": "a6a2092f-8c82-474a-b623-3b3ce1b58d4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34769/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34769/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34769/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34769/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34769/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34769/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a32aee08-0b37-4df4-8264-015622fdaa3c",
              "parentUUID": "a6a2092f-8c82-474a-b623-3b3ce1b58d4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9f308af4-d093-46eb-a61a-325aa121e309",
            "35ba6758-2114-440e-89a9-8011b54ed2eb",
            "a32aee08-0b37-4df4-8264-015622fdaa3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12709,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c55070c-0cf1-4a49-9e09-34ff68f557b7",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 400,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34769/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34769/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34769/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34769/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34769/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34769/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34769/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "ef197d7b-5aae-4458-8106-aa8a2a1a5059",
              "parentUUID": "8c55070c-0cf1-4a49-9e09-34ff68f557b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 243,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34769/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34769/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34769/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34769/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34769/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34769/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34769/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34769/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34769/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34769/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34769/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34769/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7d17256e-9ce4-473f-9086-a55290d24eea",
              "parentUUID": "8c55070c-0cf1-4a49-9e09-34ff68f557b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ef197d7b-5aae-4458-8106-aa8a2a1a5059",
            "7d17256e-9ce4-473f-9086-a55290d24eea"
          ],
          "pending": [],
          "skipped": [],
          "duration": 643,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}